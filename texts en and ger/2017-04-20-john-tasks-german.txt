 
In jsonerrors.txt sind die Fehler von AjV
AjV ist ein Validator für json schemas
Nur: bessere Lesbarkeit, der Fehler
Was macht JSON.stringify ?

joinen?
http://www.web3d.org/join
http://www.web3d.org/community/public-mailing-lists
https://github.com/epoberezkin/ajv
x3d browser:
http://titania.create3000.de/cobweb/
https://github.com/coderextreme/x3dschema/


json nehmen und durch ein Programm jagen, um fehler zu bekommen
Sie konvertiern JSON zu X3DOM and X3D XML
Spätere Aufgabe ist ein schön formatiertes html5 popup für die Fehler
Aber das wird John wohl machen
Wichtig ist keine Fehler auszulassen, wegen injection gefahr
Testfälle
1) Ort 2) störende Operation 3) problematischer Parameter oder Abhängigkeit

https://json-schema-validator.herokuapp.com/
http://www.jsonschemavalidator.net/
https://jsonschemalint.com/#/version/draft-04/markup/json
Wie Nachrichten erscheinen, sehen bei:
http://coderextreme.net/X3DJSONLD/  wählen force.json, popup

nur die fehler bereiche, nur validator fehler, keine anderen json parsing fehler
fokussieren auf eigenschaften: zu viel, fehlend und Abhängigkeiten / Bedingungen, Grenzen, Pfad
Ajv erstellt die Fehler

Technologien: X3D/VRML, XML, json, X3DJSAIL -- X3D Java Scene Authoring Library
SAI - Scene Authoring Interface -- programmatic interface to X3D/VRML
JSON schema -- a draft standard for schemas written in JSON
JSON -- Java Script Object Notation
OM4X3D -- Object Model for X3D.  An Object Model written in XML that Don and Roy have come up with for describing the X3D standard
http://www.web3d.org/x3d/content/examples/X3dResources.html

zum validieren, beispiele:
http://www.web3d.org/x3d/content/examples/X3dExampleArchivesJsonScenes.zip
Fehler einbauen!

schema dateien:
https://github.com/coderextreme/x3dvalidate/blob/master/x3d-3.3-JSONSchema.json

Prozeduren statt extra Programme
nicht alles, sondern einzelne Nachrichten, zB 80 Chars
ein mal für parser und ein mal für validator
JSON.parse() and Ajv,  JSON.stringify
bei .parse, gibt es noch etwas das nicht nur json ist
vielleicht jsonlint verwenden
forken: https://github.com/coderextreme/x3dvalidate
index.js aufteilen in für JSON.parse und für Ajv
Beispiele: http://www.web3d.org/x3d/content/examples/X3dExampleArchivesJsonScenes.zip
Sein Webserver: https://github.com/coderextreme/X3DJSONLD/blob/master/app.js

You may want to split off the jsonlint error messages from the Ajv messages
so they aren't in the same try catch
